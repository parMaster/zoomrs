server:
  listen: :8099
  dbg: true
  domain: localhost
  access_key_salt: secret
  oauth_client_id: secret # Google OAuth Client ID
  oauth_client_secret: secret # Google OAuth Client Secret
  oauth_disable_xsrf: false
  jwt_secret: secret # JWT secret - generated by running "openssl rand -hex 32"
  managers: ["example@email.com", "example2@email.com"]
client:
  account_id: secret # CLI should use separate config with cli-specifis account_id,
  id: secret         # id and secret, so that they can be different from the web client,
  secret: secret     # and so that they don't spoil the service auth token every time the CLI is used
  trash_downloaded: false
  delete_downloaded: false # trumps trash_downloaded
  delete_skipped: true # even if this is true, files will not be deleted if delete_downloaded is false, but will be trashed if trash_downloaded is true
storage:
  type: sqlite
  path: file:.tmp/data1.db?mode=rwc&_journal_mode=WAL
  repository: .tmp # Path to download files
syncable:
    important: ["shared_screen_with_gallery_view"]
    alternative: ["shared_screen_with_speaker_view"]
    optional: ["chat_file"]
    min_duration: 3 # minutes
commander:
  instances: ["http://localhost:8099"] # running instances of the service, used to ask them if specific meeting recordings already downloaded